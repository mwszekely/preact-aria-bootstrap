@use "bootstrap-sass-variables/prefix" as *;
@use "bootstrap-sass-variables/enable-shadows" as *;
@use "bootstrap-sass-variables/primary" as *;
@use "bootstrap-sass-variables/btn-box-shadow" as *;
@use "bootstrap-sass-variables/btn-focus-width" as *;
@use "bootstrap-sass-variables/dropdown-border-radius" as *;
@use "bootstrap-sass-variables/functions/to-rgb" as *;

.popper-popup.popper-menu {
    --#{$prefix}dropdown-border-radius: #{$dropdown-border-radius};
    border-radius: var(--bs-dropdown-border-radius);
    pointer-events: all;

    &>.dropdown-menu {
        --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix($primary, $primary, 15%))};
        --#{$prefix}btn-box-shadow: #{$btn-box-shadow};
        --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), .5);

        position: relative;

        // Along with Floating-UI, ensures the dropdown isn't taller than what space is left on-screen.
        max-width: var(--popup-max-width, unset);
        max-height: var(--popup-max-height, unset);
        overflow-y: auto;

        // Ensure that the focus ring doesn't escape the dropdown (which has `overflow: hidden` applied to it)
        --bs-dropdown-padding-x: #{$btn-focus-width};

        &>.dropdown-menu-list {
            //pointer-events: all;

            &>.dropdown-item {
                // Make sure that z-index changes can actually apply
                position: relative;
                
                cursor: pointer;

                &>.dropdown-item-icon {
                    z-index: 2;
                    position: absolute;
                    top: 0;
                    bottom: 0;
                    inset-block-start: 0;
                    inset-block-end: 0;
                    display: flex;
                    align-items: center;
        
                    &.dropdown-item-icon-start {
                        inset-inline-start: 0;
                        &>.btn {
                            border-start-start-radius: inherit;
                            border-end-start-radius: inherit;
                        }
                    }
            
                    &.dropdown-item-icon-end {
                        inset-inline-end: 0;
                        &>.btn {
                            border-start-end-radius: inherit;
                            border-end-end-radius: inherit;
                        }
                    }
        
                    &>.btn {
                        height: 100%;
                    }

                    &>.spinner-border {
                        opacity: 0;
                        transition: opacity 0.25s ease-in-out;
                    }
                }

                &.pending>.dropdown-item-icon>.spinner-border  {
                    opacity: 1;
                }


                &.dropdown-item-with-icon-start {
                    padding-inline-start: 2em;
                }

                &.dropdown-item-with-icon-end {
                    padding-inline-end: 2em;
                }

                &:focus-visible {
                    // Ensure that the focused item is on top of the others, specifically for the focus ring.
                    z-index: 10;
                }
                //pointer-events: all;
                //outline: none;

                // Add a a focus ring, missing by default on dropdown items.
                &:focus-visible {
                    outline: none;

                    // Avoid using mixin so we can pass custom focus shadow properly (also because we can't modularly)
                    @if $enable-shadows {
                        box-shadow: var(--#{$prefix}btn-box-shadow),
                        var(--#{$prefix}btn-focus-box-shadow);
                    }
                    @else {
                        box-shadow: var(--#{$prefix}btn-focus-box-shadow);
                    }
                }
            }
        }
    }
}